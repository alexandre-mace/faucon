{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Array","prototype","random","this","Math","floor","length","App","useState","count","setCount","definitions","setDefinitions","currentDefinition","setCurrentDefinition","useEffect","data","potentialNewDefinitions","filter","definition","title","id","className","target","rel","href","sourceUrl","sourceName","content","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2mVAIAA,MAAMC,UAAUC,OAAS,WACrB,OAAOC,KAAKC,KAAKC,MAAOD,KAAKF,SAASC,KAAKG,UA+ChCC,MA5Cf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAEyBF,mBAAS,IAFlC,mBAENG,EAFM,KAEOC,EAFP,OAGqCJ,mBAAS,MAH9C,mBAGNK,EAHM,KAGaC,EAHb,KAgBb,OAXEC,qBAAU,WACNH,EAAeI,KAChB,IAEHD,qBAAU,WACN,IAAME,EAAiD,OAAtBJ,GAA2D,qBAAtBA,EAChEF,EACAA,EAAYO,QAAO,SAAAC,GAAU,OAAIA,EAAWC,QAAUP,EAAkBO,SAC9EN,EAAqBG,EAAwBf,YAC9C,CAACO,EAAOE,IAGT,qCACE,mCACI,qBAAKU,GAAG,YAAR,oBAGA,sBAAKC,UAAW,QAAhB,UAAyB,+BAAOb,IAAhC,oCACA,mBAAGY,GAAG,WAAN,oDAEDR,GACD,iCACI,gCACI,qBAAKS,UAAW,mBAAhB,SAAqCT,EAAkBO,QACvD,qBAAKE,UAAW,oBAAhB,SAAqC,mBAAGC,OAAO,SAASC,IAAI,aAAaC,KAAMZ,EAAkBa,UAA5D,SAAwEb,EAAkBc,eAC/H,qBAAKL,UAAW,qBAAhB,SACKT,EAAkBe,aAG3B,wBAAQN,UAAW,gBAAiBO,QAAS,WACzCnB,EAASD,EAAQ,IADrB,4BC9BCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b56033d4.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from \"react\";\nimport data from './domain/definitions.json';\n\nArray.prototype.random = function () {\n    return this[Math.floor((Math.random()*this.length))];\n}\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [definitions, setDefinitions] = useState([]);\n  const [currentDefinition, setCurrentDefinition] = useState(null);\n\n    useEffect(() => {\n        setDefinitions(data);\n    }, []);\n\n    useEffect(() => {\n        const potentialNewDefinitions = (currentDefinition === null || typeof currentDefinition === \"undefined\")\n            ? definitions\n            : definitions.filter(definition => definition.title !== currentDefinition.title)\n        setCurrentDefinition(potentialNewDefinitions.random())\n    }, [count, definitions]);\n\n  return (\n      <>\n        <header>\n            <div id=\"maintitle\">\n                Faucon\n            </div>\n            <div className={\"count\"}><span>{count}</span> désinformations comprises.</div>\n            <p id=\"subtitle\">S'informer sur la désinformation</p>\n        </header>\n          {currentDefinition &&\n          <main>\n              <div>\n                  <div className={\"definition-title\"}>{currentDefinition.title}</div>\n                  <div className={\"definition-source\"}><a target=\"_blank\" rel=\"noreferrer\" href={currentDefinition.sourceUrl}>{currentDefinition.sourceName}</a></div>\n                  <div className={\"definition-content\"}>\n                      {currentDefinition.content}\n                  </div>\n              </div>\n              <button className={\"action-button\"} onClick={() => {\n                  setCount(count + 1);\n\n              } }>Compris</button>\n          </main>\n          }\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}