{"version":3,"sources":["infrastructure/repository/getWikipediaDefinition.js","application/query/getDefinition.js","App.js","reportWebVitals.js","index.js"],"names":["getWikipediaTitle","request","responseXML","querySelectorAll","innerText","getWikipediaDescription","descriptionParagraphs","potentialParagraph","previousSibling","tagName","push","map","node","reverse","getWikipediaRelated","relatedSection","querySelector","i","loopRelated","parentNode","className","includes","childNodes","Array","from","filter","nextSibling","getWikipediaDefinition","word","setter","XMLHttpRequest","open","replace","responseType","onload","e","readyState","status","title","relateds","description","console","error","statusText","onerror","send","getDefinition","prototype","random","this","Math","floor","length","App","useState","count","setCount","data","definitions","currentDefinition","setCurrentDefinition","useEffect","potentialNewDefinitions","definition","id","target","rel","href","sourceUrl","sourceName","index","related","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd1c29a7.chunk.js","sourcesContent":["const getWikipediaDefinition = (word, setter) => {\n    let request = new XMLHttpRequest();\n    // eslint-disable-next-line no-useless-concat\n    request.open(\"GET\", \"https://eerie-alien-18238.herokuapp.com/\" + \"https://fr.wikipedia.org/wiki/\" + word.replace(' ', '_'), true);  // last parameter must be true\n    request.responseType = \"document\";\n    request.onload = function (e) {\n        if (request.readyState === 4) {\n            if (request.status === 200) {\n                if (typeof setter !== 'undefined') {\n                    const title = getWikipediaTitle(request)\n                    const descriptionParagraphs = getWikipediaDescription(request)\n                    const relateds = getWikipediaRelated(request)\n\n                    setter({\n                        title: title,\n                        description: descriptionParagraphs,\n                        relateds: relateds\n                    })\n                }\n            } else {\n                console.error(request.status, request.statusText);\n            }\n        }\n    };\n    request.onerror = function (e) {\n        console.error(request.status, request.statusText);\n    };\n    request.send(null);  // no\n}\n\nconst getWikipediaTitle = (request) => {\n    return request.responseXML.querySelectorAll(\"h1#firstHeading\")[0].innerText;\n}\n\nconst getWikipediaDescription = (request) => {\n    const secondTitle = request.responseXML.querySelectorAll(\"h2:not(#mw-toc-heading)\");\n    let descriptionParagraphs = [];\n    let potentialParagraph = secondTitle[1].previousSibling.previousSibling;\n\n    if (potentialParagraph !== null) {\n        if (potentialParagraph.tagName === 'DIV') {\n            potentialParagraph = potentialParagraph.previousSibling.previousSibling\n        }\n        while (potentialParagraph !== null && potentialParagraph.tagName === 'P') {\n            descriptionParagraphs.push(potentialParagraph)\n            potentialParagraph = potentialParagraph.previousSibling\n        }\n        descriptionParagraphs = descriptionParagraphs.map(node => node.innerText).reverse()\n        return descriptionParagraphs\n    }\n\n    return descriptionParagraphs\n}\n\nconst getWikipediaRelated = (request) => {\n    let relatedSection = request.responseXML.querySelector(\"#Articles_connexes\");\n    if (relatedSection !== null) {\n        let relateds = [];\n        var i;\n        let loopRelated = relatedSection.parentNode;\n        for (i = 0; i < 8; i++) {\n            if (loopRelated && loopRelated.className && loopRelated.className.includes(\"colonnes\")) {\n                if (loopRelated.childNodes[1] && loopRelated.childNodes[1].tagName === 'UL') {\n                    return Array.from(loopRelated.childNodes[1].childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n            }\n            if (loopRelated && loopRelated.tagName === 'UL') {\n                return Array.from(loopRelated.childNodes)\n                    .filter(node => node.tagName === 'LI')\n                    .filter(node => !node.innerText.includes('Portail'))\n                    .map(node => node.innerText)\n            }\n            loopRelated = loopRelated.nextSibling\n        }\n        return relateds;\n    }\n    relatedSection = request.responseXML.querySelector(\"#Voir_aussi\");\n    if (relatedSection !== null) {\n        let loopRelated = relatedSection.parentNode;\n        for (i = 0; i < 5; i++) {\n            if (loopRelated && loopRelated.tagName === 'UL') {\n                return Array.from(loopRelated.childNodes)\n                    .filter(node => node.tagName === 'LI')\n                    .filter(node => !node.innerText.includes('Portail'))\n                    .map(node => node.innerText)\n            }\n            loopRelated = loopRelated.nextSibling\n        }\n    }\n    return [];\n\n}\nexport default getWikipediaDefinition","import getWikipediaDefinition from \"../../infrastructure/repository/getWikipediaDefinition\";\n\nconst getDefinition = (word, setter) => {\n    return getWikipediaDefinition(word, setter)\n}\nexport default getDefinition;","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport data from './domain/definitions.json';\nimport getDefinition from \"./application/query/getDefinition\";\n\n// eslint-disable-next-line no-extend-native\nArray.prototype.random = function () {\n    return this[Math.floor((Math.random() * this.length))];\n}\n\nfunction App() {\n    const [count, setCount] = useState(0);\n    const [definitions] = useState(data);\n    const [currentDefinition, setCurrentDefinition] = useState(null);\n\n    useEffect(() => {\n        const potentialNewDefinitions = (currentDefinition === null || typeof currentDefinition === \"undefined\")\n            ? definitions\n            : definitions.filter(definition => definition !== currentDefinition.title)\n\n        setCurrentDefinition(getDefinition(potentialNewDefinitions.random(), setCurrentDefinition))\n    }, [count, definitions]);\n\n    return (\n        <>\n            <header>\n                <div id=\"maintitle\">\n                    Faucon\n                </div>\n                <div className={\"count\"}><span>{count}</span> désinformations comprises.</div>\n                <p id=\"subtitle\">S'informer sur la désinformation</p>\n            </header>\n            {currentDefinition &&\n            <main>\n                <div>\n                    <div className={\"definition-title\"}>{currentDefinition.title}</div>\n                    <div className={\"definition-source\"}>\n                        <a target=\"_blank\" rel=\"noreferrer\"\n                            href={currentDefinition.sourceUrl}>{currentDefinition.sourceName}</a>\n                    </div>\n                    {currentDefinition.description.map((description, index) => (\n                        <div key={index} className={\"definition-content\"}>\n                            {description}\n                        </div>\n                    ))}\n                    {currentDefinition.relateds.length > 0 &&\n                    <div className={\"definition-related-title\"}>\n                        Connexes\n                    </div>\n                    }\n                    {currentDefinition.relateds.map((related, index) => (\n                        <div key={index} className={\"definition-related\"} onClick={() => {\n                            setCurrentDefinition(getDefinition(related, setCurrentDefinition))\n                        }}>\n                            {related}\n                        </div>\n                    ))}\n                </div>\n                <button className={\"action-button\"} onClick={() => {setCount(count + 1);}}>Compris</button>\n            </main>\n            }\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}