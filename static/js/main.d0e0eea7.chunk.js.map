{"version":3,"sources":["infrastructure/repository/getWikipediaDefinition.js","application/query/getDefinition.js","App.js","reportWebVitals.js","index.js"],"names":["mediaQuery1","window","matchMedia","getWikipediaTitle","request","responseXML","querySelectorAll","innerText","getWikipediaDescription","i","secondTitle","descriptionParagraphs","potentialParagraph","includes","tagName","push","previousElementSibling","map","node","reverse","matches","mobilePotentialParagraph","lastChild","Array","from","parentNode","childNodes","filter","getWikipediaRelated","relatedSection","querySelector","loopRelated","className","length","firstChild","nextSibling","getWikipediaDefinition","word","setter","XMLHttpRequest","open","replaceAll","responseType","onload","e","readyState","status","console","error","statusText","title","description","relateds","onerror","send","getDefinition","prototype","random","this","Math","floor","relatedRatio","App","useState","count","setCount","data","definitions","needsNewDefinition","setNeedsNewDefinition","needsNewRelatedDefinition","setNeedsNewRelatedDefinition","currentDefinition","setCurrentDefinition","useEffect","potentialNewDefinitions","definition","related","scrollTo","id","target","rel","href","sourceUrl","sourceName","index","style","fontSize","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0e0eea7.chunk.js","sourcesContent":["let mediaQuery1 = window.matchMedia(\"(max-width: 600px)\");\n\nconst getWikipediaDefinition = (word, setter) => {\n    let request = new XMLHttpRequest();\n    // eslint-disable-next-line no-useless-concat\n    request.open(\"GET\", \"https://eerie-alien-18238.herokuapp.com/\" + \"https://fr.wikipedia.org/wiki/\" + word.replaceAll(' ', '_'), true);  // last parameter must be true\n    request.responseType = \"document\";\n    request.onload = function (e) {\n        if (request.readyState === 4) {\n            if (request.status === 200) {\n                if (typeof setter !== 'undefined') {\n                    const title = getWikipediaTitle(request)\n                    const descriptionParagraphs = getWikipediaDescription(request)\n                    const relateds = getWikipediaRelated(request)\n\n                    setter({\n                        title: title,\n                        description: descriptionParagraphs,\n                        relateds: relateds\n                    })\n                    return;\n                }\n            } else {\n                console.error(request.status, request.statusText);\n\n                setter({\n                    title: 'Page non atteignable',\n                    description: [\"Désolé, Faucon n'a pas pu trouver la page.\"],\n                    relateds: []\n                })\n                return;\n            }\n        }\n    };\n    request.onerror = function (e) {\n        console.error(request.status, request.statusText);\n    };\n    request.send(null);  // no\n}\n\nconst getWikipediaTitle = (request) => {\n    return request.responseXML.querySelectorAll(\"h1\")[0].innerText;\n}\n\nconst getWikipediaDescription = (request) => {\n    const secondTitle = request.responseXML.querySelectorAll(\"h2:not(#mw-toc-heading)\");\n    let descriptionParagraphs = [];\n    let potentialParagraph = secondTitle[0];\n    if (potentialParagraph.innerText.includes('de navigation')) {\n        potentialParagraph = secondTitle[1]\n    }\n    let i;\n    for (i = 0; i < 8; i++) {\n        if (potentialParagraph && potentialParagraph.tagName === 'P') {\n            while (potentialParagraph !== null && potentialParagraph.tagName === 'P') {\n                descriptionParagraphs.push(potentialParagraph)\n                potentialParagraph = potentialParagraph.previousElementSibling\n            }\n            descriptionParagraphs = descriptionParagraphs.map(node => node.innerText).reverse()\n            return descriptionParagraphs\n        }\n        if (mediaQuery1.matches && potentialParagraph.previousElementSibling && potentialParagraph.previousElementSibling.tagName === 'SECTION') {\n            let mobilePotentialParagraph = potentialParagraph.previousElementSibling.lastChild\n            for (i = 0; i < 5; i++) {\n                if (mobilePotentialParagraph && mobilePotentialParagraph.tagName === 'P') {\n                    return Array.from(mobilePotentialParagraph.parentNode.childNodes)\n                        .filter(node => node.tagName === 'P')\n                        .map(node => node.innerText)\n                }\n                mobilePotentialParagraph = mobilePotentialParagraph.previousElementSibling;\n            }\n        }\n        if (potentialParagraph.previousElementSibling === null) {\n            potentialParagraph = potentialParagraph.parentNode\n        } else {\n            potentialParagraph = potentialParagraph.previousElementSibling\n        }\n    }\n\n    return descriptionParagraphs\n}\n\nconst getWikipediaRelated = (request) => {\n    let relatedSection = request.responseXML.querySelector(\"#Articles_connexes\");\n    if (relatedSection !== null) {\n        let relateds = [];\n        var i;\n        let loopRelated = relatedSection.parentNode;\n        for (i = 0; i < 8; i++) {\n            if (loopRelated && loopRelated.className && loopRelated.className.includes(\"colonnes\")) {\n                if (loopRelated.childNodes[1] && loopRelated.childNodes[1].tagName === 'UL') {\n                    return Array.from(loopRelated.childNodes[1].childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n            }\n            if (loopRelated && loopRelated.tagName === 'UL') {\n                return Array.from(loopRelated.childNodes)\n                    .filter(node => node.tagName === 'LI')\n                    .filter(node => !node.innerText.includes('Portail'))\n                    .map(node => node.innerText)\n            }\n            if (mediaQuery1.matches && loopRelated.tagName === \"SECTION\" && Array.from(loopRelated.childNodes).length > 0) {\n                if (Array.from(loopRelated.childNodes).filter(node => node.tagName === 'UL').length > 0) {\n                    return Array.from(Array.from(loopRelated.childNodes).filter(node => node.tagName === 'UL')[0].childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n                if (Array.from(loopRelated.childNodes).filter(node => (node.className && node.className.includes(\"colonnes\"))).length > 0) {\n                    return Array.from(Array.from(loopRelated.childNodes).filter(node => (node.className && node.className.includes(\"colonnes\")))[0].firstChild.childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n            }\n            loopRelated = loopRelated.nextSibling\n        }\n        return relateds;\n    }\n    relatedSection = request.responseXML.querySelector(\"#Voir_aussi\");\n    if (relatedSection !== null) {\n        let loopRelated = relatedSection.parentNode;\n        for (i = 0; i < 5; i++) {\n            if (loopRelated && loopRelated.tagName === 'UL') {\n                return Array.from(loopRelated.childNodes)\n                    .filter(node => node.tagName === 'LI')\n                    .filter(node => !node.innerText.includes('Portail'))\n                    .map(node => node.innerText)\n            }\n            if (loopRelated.nextSibling === null) {\n                loopRelated = loopRelated.parentNode\n            } else {\n                loopRelated = loopRelated.nextSibling\n            }\n        }\n    }\n    return [];\n\n}\nexport default getWikipediaDefinition","import getWikipediaDefinition from \"../../infrastructure/repository/getWikipediaDefinition\";\n\nconst getDefinition = (word, setter) => {\n    return getWikipediaDefinition(word, setter)\n}\nexport default getDefinition;","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport data from './domain/definitions.json';\nimport getDefinition from \"./application/query/getDefinition\";\n\nlet mediaQuery1 = window.matchMedia(\"(max-width: 600px)\");\n\n// eslint-disable-next-line no-extend-native\nArray.prototype.random = function () {\n    return this[Math.floor((Math.random() * this.length))];\n}\n\nconst relatedRatio = mediaQuery1.matches ? 1.3 : 3;\n\nfunction App() {\n    const [count, setCount] = useState(0);\n    const [definitions] = useState(data);\n    const [needsNewDefinition, setNeedsNewDefinition] = useState(true);\n    const [needsNewRelatedDefinition, setNeedsNewRelatedDefinition] = useState({\n        status: false\n    });\n    const [currentDefinition, setCurrentDefinition] = useState(null);\n\n    useEffect(() => {\n        if (needsNewDefinition) {\n            const potentialNewDefinitions = (currentDefinition === null || typeof currentDefinition === \"undefined\")\n                ? definitions\n                : definitions.filter(definition => definition !== currentDefinition.title)\n\n            getDefinition(potentialNewDefinitions.random(), setCurrentDefinition)\n            setNeedsNewDefinition(false)\n        }\n    }, [needsNewDefinition, definitions]);\n\n    useEffect(() => {\n        if (needsNewRelatedDefinition.status) {\n            getDefinition(needsNewRelatedDefinition.related, setCurrentDefinition)\n            setNeedsNewRelatedDefinition({\n                status: false\n            })\n        }\n    }, [needsNewRelatedDefinition, definitions]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [count]);\n\n    return (\n        <>\n            <header>\n                <div id=\"maintitle\">\n                    Faucon\n                </div>\n                <div className={\"count\"}><span>{count}</span> sujets étudiés.</div>\n                <p id=\"subtitle\">S'informer sur la désinformation</p>\n            </header>\n            <main className={!currentDefinition ? 'main-min' : \"main\"}>\n                {currentDefinition &&\n                    <>\n                        <div>\n                            <div className={\"definition-title\"}>{currentDefinition.title}</div>\n                            <div className={\"definition-source\"}>\n                                <a target=\"_blank\" rel=\"noreferrer\"\n                                    href={currentDefinition.sourceUrl}>{currentDefinition.sourceName}</a>\n                            </div>\n                            {currentDefinition.description.map((description, index) => (\n                                <div key={index} className={\"definition-content\"}>\n                                    {description}\n                                </div>\n                            ))}\n                            <div className={\"related-wrapper\"}>\n                            {currentDefinition.relateds.map((related, index) => (\n                                <div key={index} style={{fontSize: Math.random() * relatedRatio + 1 + \"rem\"}} className={\"definition-related\"} onClick={() => {\n                                    setCount(count + 1)\n                                    setNeedsNewRelatedDefinition({\n                                        status: true,\n                                        related: related\n                                    })\n                                }}>\n                                    {related}\n                                </div>\n                            ))}\n                            </div>\n                        </div>\n                        <button className={\"action-button\"} onClick={() => {\n                            setCount(count + 1)\n                            setNeedsNewDefinition(true)\n                        }}>Compris</button>\n                    </>\n                }\n            </main>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}