{"version":3,"sources":["infrastructure/repository/getWikipediaDefinition.js","application/query/getDefinition.js","infrastructure/formatter/wikipediaParagraphFormatter.js","App.js","reportWebVitals.js","index.js"],"names":["getWikipediaTitle","request","responseXML","querySelectorAll","innerText","getWikipediaDescription","i","secondTitle","descriptionParagraphs","potentialParagraph","includes","tagName","push","previousElementSibling","map","node","reverse","mobilePotentialParagraph","lastChild","Array","from","parentNode","childNodes","filter","getWikipediaRelated","relatedSection","querySelector","loopRelated","className","length","firstChild","nextSibling","getWikipediaDefinition","word","setter","XMLHttpRequest","open","replaceAll","responseType","onload","e","readyState","status","console","error","statusText","title","description","relateds","onerror","send","getDefinition","wikipediaParagraphFormatter","string","replace","mediaQuery1","window","matchMedia","prototype","random","this","Math","floor","relatedRatio","matches","relatedTranslateRatio","App","useState","count","setCount","data","definitions","loading","setLoading","needsNewDefinition","setNeedsNewDefinition","needsNewRelatedDefinition","setNeedsNewRelatedDefinition","currentDefinition","setCurrentDefinition","delayedCloseLoader","setTimeout","useEffect","potentialNewDefinitions","definition","related","scrollTo","id","target","rel","href","sourceUrl","sourceName","index","style","fontSize","transform","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+XAsCMA,EAAoB,SAACC,GACvB,OAAOA,EAAQC,YAAYC,iBAAiB,MAAM,GAAGC,WAGnDC,EAA0B,SAACJ,GAC7B,IAMIK,EANEC,EAAcN,EAAQC,YAAYC,iBAAiB,2BACrDK,EAAwB,GACxBC,EAAqBF,EAAY,GAKrC,IAJIE,EAAmBL,UAAUM,SAAS,mBACtCD,EAAqBF,EAAY,IAGhCD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,GAAIG,GAAqD,MAA/BA,EAAmBE,QAAiB,CAC1D,KAA8B,OAAvBF,GAA8D,MAA/BA,EAAmBE,SACrDH,EAAsBI,KAAKH,GAC3BA,EAAqBA,EAAmBI,uBAG5C,OADAL,EAAwBA,EAAsBM,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAAWY,UAG9E,GAAIP,EAAmBI,wBAAgF,YAAtDJ,EAAmBI,uBAAuBF,QAAuB,CAC9G,IAAIM,EAA2BR,EAAmBI,uBAAuBK,UACzE,IAAKZ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,GAAIW,GAAiE,MAArCA,EAAyBN,QACrD,OAAOQ,MAAMC,KAAKH,EAAyBI,WAAWC,YACjDC,QAAO,SAAAR,GAAI,MAAqB,MAAjBA,EAAKJ,WACpBG,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAE1Ba,EAA2BA,EAAyBJ,wBAIxDJ,EAD8C,OAA9CA,EAAmBI,uBACEJ,EAAmBY,WAEnBZ,EAAmBI,uBAIhD,OAAOL,GAGLgB,EAAsB,SAACvB,GACzB,IAAIwB,EAAiBxB,EAAQC,YAAYwB,cAAc,sBACvD,GAAuB,OAAnBD,EAAyB,CACzB,IACInB,EACAqB,EAAcF,EAAeJ,WACjC,IAAKf,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,GAAIqB,GAAeA,EAAYC,WAAaD,EAAYC,UAAUlB,SAAS,aACnEiB,EAAYL,WAAW,IAA4C,OAAtCK,EAAYL,WAAW,GAAGX,QACvD,OAAOQ,MAAMC,KAAKO,EAAYL,WAAW,GAAGA,YACvCC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAG9B,GAAIuB,GAAuC,OAAxBA,EAAYhB,QAC3B,OAAOQ,MAAMC,KAAKO,EAAYL,YACzBC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAE1B,GAA4B,YAAxBuB,EAAYhB,SAAyBQ,MAAMC,KAAKO,EAAYL,YAAYO,OAAS,EAAG,CACpF,GAAIV,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WAAkBkB,OAAS,EAClF,OAAOV,MAAMC,KAAKD,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WAAkB,GAAGW,YACzFC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAG1B,GAAIe,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,OAAKA,EAAKa,WAAab,EAAKa,UAAUlB,SAAS,eAAcmB,OAAS,EACpH,OAAOV,MAAMC,KAAKD,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,OAAKA,EAAKa,WAAab,EAAKa,UAAUlB,SAAS,eAAc,GAAGoB,WAAWC,YAAYT,YAClJC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAI1BuB,EAD4B,OAA5BA,EAAYI,YACEJ,EAAYN,WAEZM,EAAYI,YAGlC,MAvCe,GA0CnB,GAAuB,QADvBN,EAAiBxB,EAAQC,YAAYwB,cAAc,gBACtB,CACzB,IAAIC,EAAcF,EAAeJ,WACjC,IAAKf,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,GAAIqB,GAAuC,OAAxBA,EAAYhB,QAC3B,OAAOQ,MAAMC,KAAKO,EAAYL,YACzBC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAE1B,GAA4B,YAAxBuB,EAAYhB,SAAyBQ,MAAMC,KAAKO,EAAYL,YAAYO,OAAS,EAAG,CACpF,GAAIV,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WAAkBkB,OAAS,EAClF,OAAOV,MAAMC,KAAKD,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WAAkB,GAAGW,YACzFC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAE1B,GAAIe,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,OAAKA,EAAKa,WAAab,EAAKa,UAAUlB,SAAS,eAAcmB,OAAS,EACpH,OAAOV,MAAMC,KAAKD,MAAMC,KAAKO,EAAYL,YAAYC,QAAO,SAAAR,GAAI,OAAKA,EAAKa,WAAab,EAAKa,UAAUlB,SAAS,eAAc,GAAGoB,WAAWR,YACtIC,QAAO,SAAAR,GAAI,MAAqB,OAAjBA,EAAKJ,WACpBY,QAAO,SAAAR,GAAI,OAAKA,EAAKX,UAAUM,SAAS,cACxCI,KAAI,SAAAC,GAAI,OAAIA,EAAKX,aAI1BuB,EAD4B,OAA5BA,EAAYI,YACEJ,EAAYN,WAEZM,EAAYI,aAItC,MAAO,IAGIC,EA9JgB,SAACC,EAAMC,GAClC,IAAIjC,EAAU,IAAIkC,eAElBlC,EAAQmC,KAAK,MAAO,yEAAgFH,EAAKI,WAAW,IAAK,MAAM,GAC/HpC,EAAQqC,aAAe,WACvBrC,EAAQsC,OAAS,SAAUC,GACvB,GAA2B,IAAvBvC,EAAQwC,WAAkB,CAC1B,GAAuB,MAAnBxC,EAAQyC,OAqBR,OAPAC,QAAQC,MAAM3C,EAAQyC,OAAQzC,EAAQ4C,iBAEtCX,EAAO,CACHY,MAAO,uBACPC,YAAa,CAAC,oDACdC,SAAU,KAlBd,GAAsB,qBAAXd,EAAwB,CAC/B,IAAMY,EAAQ9C,EAAkBC,GAC1BO,EAAwBH,EAAwBJ,GAChD+C,EAAWxB,EAAoBvB,GAOrC,YALAiC,EAAO,CACHY,MAAOA,EACPC,YAAavC,EACbwC,SAAUA,OAgB9B/C,EAAQgD,QAAU,SAAUT,GACxBG,QAAQC,MAAM3C,EAAQyC,OAAQzC,EAAQ4C,aAE1C5C,EAAQiD,KAAK,OC9BFC,EAHO,SAAClB,EAAMC,GACzB,OAAOF,EAAuBC,EAAMC,I,iBCAzBkB,EAHqB,SAACC,GACjC,OAAOA,EAAOC,QAAQ,UAAW,IAAIA,QAAQ,SAAU,KCMvDC,EAAcC,OAAOC,WAAW,sBAGpCtC,MAAMuC,UAAUC,OAAS,WACrB,OAAOC,KAAKC,KAAKC,MAAOD,KAAKF,SAAWC,KAAK/B,UAGjD,IAAMkC,GAAeR,EAAYS,QAAU,GACrCC,EAAwBV,EAAYS,QAAU,GAAK,GAoG1CE,MAlGf,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACJC,EADI,KACGC,EADH,OAEWF,mBAASG,GAAxBC,EAFI,sBAGmBJ,oBAAS,GAH5B,mBAGJK,EAHI,KAGKC,EAHL,OAIyCN,oBAAS,GAJlD,mBAIJO,EAJI,KAIgBC,EAJhB,OAKuDR,mBAAS,CACvEzB,QAAQ,IAND,mBAKJkC,EALI,KAKuBC,EALvB,OAQuCV,mBAAS,MARhD,mBAQJW,EARI,KAQeC,EARf,KAULC,EAAqB,WACvBC,YAAW,WACPR,GAAW,KACZ,MA+BP,OA5BAS,qBAAU,WACN,GAAIR,EAAoB,CACpB,IAAMS,EAAiD,OAAtBL,GAA2D,qBAAtBA,EAChEP,EACAA,EAAYhD,QAAO,SAAA6D,GAAU,OAAIA,IAAeN,EAAkBhC,SAExE2B,GAAW,GACXO,IACA7B,EAAcgC,EAAwBxB,SAAUoB,GAChDJ,GAAsB,MAE3B,CAACD,EAAoBH,IAExBW,qBAAU,WACFN,EAA0BlC,SAC1B+B,GAAW,GACXO,IACA7B,EAAcyB,EAA0BS,QAASN,GACjDF,EAA6B,CACzBnC,QAAQ,OAGjB,CAACkC,EAA2BL,IAE/BW,qBAAU,WACN1B,OAAO8B,SAAS,EAAG,KACpB,CAAClB,IAGA,qCACI,mCACI,qBAAKmB,GAAG,YAAR,oBAGA,sBAAK3D,UAAW,QAAhB,UAAyB,+BAAOwC,IAAhC,4BACA,mBAAGmB,GAAG,WAAN,oDAEJ,uBAAM3D,UAAYkD,EAAiC,OAAb,WAAtC,WACMJ,GAAsBE,EAA0BlC,QAAU8B,IACxD,qBAAK5C,UAAW,SAAhB,SACI,cAAC,IAAD,uBAGNkD,IAAsBN,GACpB,qCACI,gCACI,qBAAK5C,UAAW,mBAAhB,SAAqCkD,EAAkBhC,QACvD,qBAAKlB,UAAW,oBAAhB,SACI,mBAAG4D,OAAO,SAASC,IAAI,aACnBC,KAAMZ,EAAkBa,UAD5B,SACwCb,EAAkBc,eAE7Dd,EAAkB/B,YAAYjC,KAAI,SAACiC,EAAa8C,GAAd,OAC/B,qBAAiBjE,UAAW,qBAA5B,SACKwB,EAA4BL,IADvB8C,MAId,qBAAKjE,UAAW,kBAAhB,SACCkD,EAAkB9B,SAASlC,KAAI,SAACuE,EAASQ,GAAV,OAC5B,qBAAiBC,MAAO,CAACC,SAAUlC,KAAKF,SAAWI,EAAe,EAAI,MAAOiC,UAAW,eAAiBnC,KAAKF,SAAWM,EAAwB,OAAQrC,UAAW,qBAAsBqE,QAAS,WAC/L5B,EAASD,EAAQ,GACjBS,EAA6B,CACzBnC,QAAQ,EACR2C,QAASA,KAJjB,SAOKA,GAPKQ,WAYlB,wBAAQjE,UAAW,gBAAiBqE,QAAS,WACzC5B,EAASD,EAAQ,GACjBO,GAAsB,IAF1B,+BC3FTuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e52ddb11.chunk.js","sourcesContent":["const getWikipediaDefinition = (word, setter) => {\n    let request = new XMLHttpRequest();\n    // eslint-disable-next-line no-useless-concat\n    request.open(\"GET\", \"https://eerie-alien-18238.herokuapp.com/\" + \"https://fr.wikipedia.org/wiki/\" + word.replaceAll(' ', '_'), true);  // last parameter must be true\n    request.responseType = \"document\";\n    request.onload = function (e) {\n        if (request.readyState === 4) {\n            if (request.status === 200) {\n                if (typeof setter !== 'undefined') {\n                    const title = getWikipediaTitle(request)\n                    const descriptionParagraphs = getWikipediaDescription(request)\n                    const relateds = getWikipediaRelated(request)\n\n                    setter({\n                        title: title,\n                        description: descriptionParagraphs,\n                        relateds: relateds\n                    })\n                    return;\n                }\n            } else {\n                console.error(request.status, request.statusText);\n\n                setter({\n                    title: 'Page non atteignable',\n                    description: [\"Désolé, Faucon n'a pas pu trouver la page.\"],\n                    relateds: []\n                })\n                return;\n            }\n        }\n    };\n    request.onerror = function (e) {\n        console.error(request.status, request.statusText);\n    };\n    request.send(null);  // no\n}\n\nconst getWikipediaTitle = (request) => {\n    return request.responseXML.querySelectorAll(\"h1\")[0].innerText;\n}\n\nconst getWikipediaDescription = (request) => {\n    const secondTitle = request.responseXML.querySelectorAll(\"h2:not(#mw-toc-heading)\");\n    let descriptionParagraphs = [];\n    let potentialParagraph = secondTitle[0];\n    if (potentialParagraph.innerText.includes('de navigation')) {\n        potentialParagraph = secondTitle[1]\n    }\n    let i;\n    for (i = 0; i < 8; i++) {\n        if (potentialParagraph && potentialParagraph.tagName === 'P') {\n            while (potentialParagraph !== null && potentialParagraph.tagName === 'P') {\n                descriptionParagraphs.push(potentialParagraph)\n                potentialParagraph = potentialParagraph.previousElementSibling\n            }\n            descriptionParagraphs = descriptionParagraphs.map(node => node.innerText).reverse()\n            return descriptionParagraphs\n        }\n        if (potentialParagraph.previousElementSibling && potentialParagraph.previousElementSibling.tagName === 'SECTION') {\n            let mobilePotentialParagraph = potentialParagraph.previousElementSibling.lastChild\n            for (i = 0; i < 5; i++) {\n                if (mobilePotentialParagraph && mobilePotentialParagraph.tagName === 'P') {\n                    return Array.from(mobilePotentialParagraph.parentNode.childNodes)\n                        .filter(node => node.tagName === 'P')\n                        .map(node => node.innerText)\n                }\n                mobilePotentialParagraph = mobilePotentialParagraph.previousElementSibling;\n            }\n        }\n        if (potentialParagraph.previousElementSibling === null) {\n            potentialParagraph = potentialParagraph.parentNode\n        } else {\n            potentialParagraph = potentialParagraph.previousElementSibling\n        }\n    }\n\n    return descriptionParagraphs\n}\n\nconst getWikipediaRelated = (request) => {\n    let relatedSection = request.responseXML.querySelector(\"#Articles_connexes\");\n    if (relatedSection !== null) {\n        let relateds = [];\n        var i;\n        let loopRelated = relatedSection.parentNode;\n        for (i = 0; i < 8; i++) {\n            if (loopRelated && loopRelated.className && loopRelated.className.includes(\"colonnes\")) {\n                if (loopRelated.childNodes[1] && loopRelated.childNodes[1].tagName === 'UL') {\n                    return Array.from(loopRelated.childNodes[1].childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n            }\n            if (loopRelated && loopRelated.tagName === 'UL') {\n                return Array.from(loopRelated.childNodes)\n                    .filter(node => node.tagName === 'LI')\n                    .filter(node => !node.innerText.includes('Portail'))\n                    .map(node => node.innerText)\n            }\n            if (loopRelated.tagName === \"SECTION\" && Array.from(loopRelated.childNodes).length > 0) {\n                if (Array.from(loopRelated.childNodes).filter(node => node.tagName === 'UL').length > 0) {\n                    return Array.from(Array.from(loopRelated.childNodes).filter(node => node.tagName === 'UL')[0].childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n\n                if (Array.from(loopRelated.childNodes).filter(node => (node.className && node.className.includes(\"colonnes\"))).length > 0) {\n                    return Array.from(Array.from(loopRelated.childNodes).filter(node => (node.className && node.className.includes(\"colonnes\")))[0].firstChild.nextSibling.childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n            }\n            if (loopRelated.nextSibling === null) {\n                loopRelated = loopRelated.parentNode\n            } else {\n                loopRelated = loopRelated.nextSibling\n            }\n        }\n        return relateds;\n    }\n    relatedSection = request.responseXML.querySelector(\"#Voir_aussi\");\n    if (relatedSection !== null) {\n        let loopRelated = relatedSection.parentNode;\n        for (i = 0; i < 5; i++) {\n            if (loopRelated && loopRelated.tagName === 'UL') {\n                return Array.from(loopRelated.childNodes)\n                    .filter(node => node.tagName === 'LI')\n                    .filter(node => !node.innerText.includes('Portail'))\n                    .map(node => node.innerText)\n            }\n            if (loopRelated.tagName === \"SECTION\" && Array.from(loopRelated.childNodes).length > 0) {\n                if (Array.from(loopRelated.childNodes).filter(node => node.tagName === 'UL').length > 0) {\n                    return Array.from(Array.from(loopRelated.childNodes).filter(node => node.tagName === 'UL')[0].childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n                if (Array.from(loopRelated.childNodes).filter(node => (node.className && node.className.includes(\"colonnes\"))).length > 0) {\n                    return Array.from(Array.from(loopRelated.childNodes).filter(node => (node.className && node.className.includes(\"colonnes\")))[0].firstChild.childNodes)\n                        .filter(node => node.tagName === 'LI')\n                        .filter(node => !node.innerText.includes('Portail'))\n                        .map(node => node.innerText)\n                }\n            }\n            if (loopRelated.nextSibling === null) {\n                loopRelated = loopRelated.parentNode\n            } else {\n                loopRelated = loopRelated.nextSibling\n            }\n        }\n    }\n    return [];\n\n}\nexport default getWikipediaDefinition","import getWikipediaDefinition from \"../../infrastructure/repository/getWikipediaDefinition\";\n\nconst getDefinition = (word, setter) => {\n    return getWikipediaDefinition(word, setter)\n}\nexport default getDefinition;","const wikipediaParagraphFormatter = (string) => {\n    return string.replace(/\\[\\d+]/g, '').replace(/,{2,}/g, '');\n}\nexport default wikipediaParagraphFormatter","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport data from './domain/definitions.json';\nimport getDefinition from \"./application/query/getDefinition\";\nimport Typing from \"react-typing-animation\";\nimport wikipediaParagraphFormatter from \"./infrastructure/formatter/wikipediaParagraphFormatter\";\n\nlet mediaQuery1 = window.matchMedia(\"(max-width: 600px)\");\n\n// eslint-disable-next-line no-extend-native\nArray.prototype.random = function () {\n    return this[Math.floor((Math.random() * this.length))];\n}\n\nconst relatedRatio = mediaQuery1.matches ? 1 : 1;\nconst relatedTranslateRatio = mediaQuery1.matches ? 20 : 50;\n\nfunction App() {\n    const [count, setCount] = useState(0);\n    const [definitions] = useState(data);\n    const [loading, setLoading] = useState(false);\n    const [needsNewDefinition, setNeedsNewDefinition] = useState(true);\n    const [needsNewRelatedDefinition, setNeedsNewRelatedDefinition] = useState({\n        status: false\n    });\n    const [currentDefinition, setCurrentDefinition] = useState(null);\n\n    const delayedCloseLoader = () => {\n        setTimeout(() => {\n            setLoading(false)\n        }, 550);\n    }\n\n    useEffect(() => {\n        if (needsNewDefinition) {\n            const potentialNewDefinitions = (currentDefinition === null || typeof currentDefinition === \"undefined\")\n                ? definitions\n                : definitions.filter(definition => definition !== currentDefinition.title)\n\n            setLoading(true)\n            delayedCloseLoader()\n            getDefinition(potentialNewDefinitions.random(), setCurrentDefinition)\n            setNeedsNewDefinition(false)\n        }\n    }, [needsNewDefinition, definitions]);\n\n    useEffect(() => {\n        if (needsNewRelatedDefinition.status) {\n            setLoading(true)\n            delayedCloseLoader()\n            getDefinition(needsNewRelatedDefinition.related, setCurrentDefinition)\n            setNeedsNewRelatedDefinition({\n                status: false\n            })\n        }\n    }, [needsNewRelatedDefinition, definitions]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [count]);\n\n    return (\n        <>\n            <header>\n                <div id=\"maintitle\">\n                    Faucon\n                </div>\n                <div className={\"count\"}><span>{count}</span> sujets étudiés.</div>\n                <p id=\"subtitle\">S'informer sur la désinformation</p>\n            </header>\n            <main className={!currentDefinition ? 'main-min' : \"main\"}>\n                {(needsNewDefinition || needsNewRelatedDefinition.status || loading) &&\n                    <div className={\"loader\"}>\n                        <Typing>Faucon</Typing>\n                    </div>\n                }\n                {(currentDefinition && !loading) &&\n                    <>\n                        <div>\n                            <div className={\"definition-title\"}>{currentDefinition.title}</div>\n                            <div className={\"definition-source\"}>\n                                <a target=\"_blank\" rel=\"noreferrer\"\n                                    href={currentDefinition.sourceUrl}>{currentDefinition.sourceName}</a>\n                            </div>\n                            {currentDefinition.description.map((description, index) => (\n                                <div key={index} className={\"definition-content\"}>\n                                    {wikipediaParagraphFormatter(description)}\n                                </div>\n                            ))}\n                            <div className={\"related-wrapper\"}>\n                            {currentDefinition.relateds.map((related, index) => (\n                                <div key={index} style={{fontSize: Math.random() * relatedRatio + 1 + \"rem\", transform: \"translateY(\" + -Math.random() * relatedTranslateRatio + \"px)\"}} className={\"definition-related\"} onClick={() => {\n                                    setCount(count + 1)\n                                    setNeedsNewRelatedDefinition({\n                                        status: true,\n                                        related: related\n                                    })\n                                }}>\n                                    {related}\n                                </div>\n                            ))}\n                            </div>\n                        </div>\n                        <button className={\"action-button\"} onClick={() => {\n                            setCount(count + 1)\n                            setNeedsNewDefinition(true)\n                        }}>Compris</button>\n                    </>\n                }\n            </main>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}